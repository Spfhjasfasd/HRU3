/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import HamburgerImage from 'src/assets/images/Navbar2_Hamburger.png';
import { styled } from '@mui/material/styles';
import useNavbar2 from 'src/components/Navbar2/useNavbar2';

const ScreenDesktopTypeQue = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  backgroundColor: `rgba(174, 29, 198, 0.33)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: data.size === 'mobile' ? `40px` : `60px`,
  justifyContent: data.size === 'mobile' ? `flex-start` : `space-between`,
  alignItems: `flex-start`,
  padding: data.size === 'mobile' ? `2px 20px` : `6px 80px`,
  boxSizing: `border-box`,
}));

const Items = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `space-between`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  width: data.size === 'mobile' ? 'unset' : `598px`,
  backgroundColor: data.size === 'mobile' ? `rgba(174, 29, 198, 0)` : 'unset',
  flexGrow: data.size === 'mobile' ? `1` : 'unset',
  margin: data.size === 'mobile' ? `0px` : 'unset',
}));

const Frame1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `column`,
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  width: data.size === 'mobile' ? `74px` : `92px`,
}));

const MenuStructure = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  height: `36px`,
});

const Items1 = styled('div', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-end`,
  alignItems: `center`,
  padding: `0px`,
  boxSizing: `border-box`,
  alignSelf: `stretch`,
  margin: data.size === 'mobile' ? `0px 0px 0px 40px` : `0px`,
}));

const AboutUs = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  margin: `0px`,
}));

const OurTeam = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  opacity: `0.6000000238418579`,
  margin: `0px 0px 0px 40px`,
}));

const Learn = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  opacity: `0.6000000238418579`,
  margin: `0px 0px 0px 40px`,
}));

const Tokenomics = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 40px`,
}));

const Team = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 40px`,
}));

const PResale = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Primary'],
  fontStyle: `normal`,
  fontFamily: `Roboto`,
  fontWeight: `500`,
  fontSize: `12px`,
  letterSpacing: `1.2px`,
  textDecoration: `none`,
  textTransform: `uppercase`,
  margin: `0px 0px 0px 40px`,
}));

const Hamburger = styled('img', {
  shouldForwardProp: (prop) => !['data'].includes(prop.toString()),
})(({ data }) => ({
  height: `15px`,
  width: `21px`,
  margin: data.size === 'mobile' ? `0px` : `0px 0px 0px 40px`,
}));

function Navbar2(props) {
  const { data } = useNavbar2();

  return (
    <ScreenDesktopTypeQue data={data}>
      <Items data={data}>
        <Frame1 data={data}></Frame1>
        <MenuStructure>
          {!(data.size === 'mobile') && (
            <Items1 data={data}>
              <AboutUs>{`about us`}</AboutUs>
              <OurTeam>{`our team`}</OurTeam>
              <Learn>{`learn`}</Learn>
              <Tokenomics>{`TOkenomics`}</Tokenomics>
              <Team>{`about us`}</Team>
              <PResale>{`Presale`}</PResale>
            </Items1>
          )}
          {data.size === 'mobile' && (
            <Hamburger
              data={data}
              src={HamburgerImage}
              loading="lazy"
              alt={'Hamburger'}
            />
          )}
        </MenuStructure>
      </Items>
    </ScreenDesktopTypeQue>
  );
}

export default Navbar2;
