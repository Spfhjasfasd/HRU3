/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import { styled } from '@mui/material/styles';
import Navbar2 from 'src/components/Navbar2/Navbar2';
import { animated, useSpring, easings } from 'react-spring';

const ScreenDesktop = styled('div')({
  backgroundColor: `rgba(191, 38, 158, 1)`,
  boxShadow: `0px 4px 4px rgba(0, 0, 0, 0.25)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  width: '100%',
  height: '100vh',
  justifyContent: `flex-start`,
  alignItems: `flex-start`,
  padding: `0px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
});

const Navbar21 = styled(Navbar2)(({ theme }) => ({
  width: `1920px`,
  height: `60px`,
  position: `absolute`,
  left: `0px`,
  top: `0px`,
}));

const Hrucoin = animated(
  styled('div')({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(0, 0, 0, 1)`,
    fontStyle: `normal`,
    fontFamily: `Anek Gujarati`,
    fontWeight: `400`,
    fontSize: `96px`,
    letterSpacing: `-4.8px`,
    textDecoration: `none`,
    lineHeight: `62px`,
    textTransform: `none`,
    position: `absolute`,
    left: `794px`,
    top: `402px`,
  })
);

const OneBlockAtATime = animated(
  styled('div')({
    textAlign: `left`,
    whiteSpace: `pre-wrap`,
    color: `rgba(0, 0, 0, 1)`,
    fontStyle: `normal`,
    fontFamily: `Anek Gujarati`,
    fontWeight: `400`,
    fontSize: `24px`,
    letterSpacing: `-1.2px`,
    textDecoration: `none`,
    lineHeight: `62px`,
    textTransform: `none`,
    position: `absolute`,
    left: `887px`,
    top: `540px`,
  })
);

const Label = animated(
  styled('div')({
    background: `linear-gradient(90deg, rgba(123, 97, 255, 1) 27.623125519427568%, rgba(254, 136, 136, 1) 89.61456174389363%)`,
    borderRadius: `50px`,
    display: `flex`,
    position: `absolute`,
    isolation: `isolate`,
    flexDirection: `row`,
    justifyContent: `center`,
    alignItems: `center`,
    padding: `20px`,
    boxSizing: `border-box`,
    left: `782px`,
    top: `476px`,
  })
);

const Frame1 = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `0px 5px`,
  boxSizing: `border-box`,
  height: `24px`,
  margin: `0px`,
});

const Text = styled('div')({
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `center`,
  alignItems: `center`,
  padding: `3px`,
  boxSizing: `border-box`,
  margin: `0px`,
});

const Label1 = styled('div')(({ theme }) => ({
  textAlign: `center`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Primary']['Contrast'],
  fontStyle: `normal`,
  fontFamily: `Heebo`,
  fontWeight: `700`,
  fontSize: `29px`,
  letterSpacing: `0px`,
  textDecoration: `none`,
  textTransform: `none`,
  margin: `0px`,
}));

function Welcome(props) {
  const [HrucoinSpring, HrucoinApi] = useSpring(() => ({
    config: {
      duration: 500,
      easing: easings['easeOutExpo'],
    },
    delay: 0,
    from: { opacity: 0 },
  }));

  const [OneBlockAtATimeSpring, OneBlockAtATimeApi] = useSpring(() => ({
    config: {
      duration: 250,
      easing: easings['easeOutExpo'],
    },
    delay: 1250,
    from: { opacity: 1 },
  }));

  const [LabelSpring, LabelApi] = useSpring(() => ({
    config: {
      duration: 1000,
      easing: easings['easeOutExpo'],
    },
    delay: 0,
    from: { opacity: 0 },
  }));

  React.useEffect(() => {
    HrucoinApi.start({
      ...{ opacity: 1 },
      delay: 0,
      config: { duration: 500 },
    });
    LabelApi.start({ ...{ opacity: 1 }, delay: 0, config: { duration: 1000 } });
  }, []);

  return (
    <ScreenDesktop>
      <Navbar21 />
      <Hrucoin style={{ ...HrucoinSpring }}>{`HRUCOIN`}</Hrucoin>
      <OneBlockAtATime
        onClick={() => {
          OneBlockAtATimeApi.start({ ...{ opacity: 0 }, delay: 1250 });
        }}
        style={{ ...OneBlockAtATimeSpring }}
      >
        {`One block at a time`}
      </OneBlockAtATime>
      <Label style={{ ...LabelSpring }}>
        <Frame1>
          <Text>
            <Label1>{`Innovating Defi Health.`}</Label1>
          </Text>
        </Frame1>
      </Label>
    </ScreenDesktop>
  );
}

export default Welcome;
