/**********************************************************************
 *
 *   Component generated by Quest
 *
 *   WARNING: By editing this component by hand, you will lose the ability to regenerate the code without conflicts.
 *   To preseve that abilty, always export from Quest to regenerate this file.
 *   To setup props, bindings and actions, use the Quest editor
 *   Code Logic goes in the hook associated with this component
 *
 *   For help and further details refer to: https://www.quest.ai/docs
 *
 *
 **********************************************************************/

import React from 'react';
import HomeImage from 'src/assets/images/Breadcrumb1_Home.png';
import SeparatorImage from 'src/assets/images/Breadcrumb1_Separator_2.png';
import Separator1Image from 'src/assets/images/Breadcrumb1_Separator_1.png';
import Separator2Image from 'src/assets/images/Breadcrumb1_Separator.png';
import { styled } from '@mui/material/styles';

const TypeQuest = styled('div')(({ theme }) => ({
  backgroundColor: theme.palette['Background']['Paper'],
  boxShadow: `inset 0px -1px 0px rgba(0, 0, 0, 0.25)`,
  display: `flex`,
  position: `relative`,
  isolation: `isolate`,
  flexDirection: `row`,
  justifyContent: `flex-start`,
  alignItems: `center`,
  padding: `0px 36px`,
  boxSizing: `border-box`,
  overflow: `hidden`,
  height: 'auto',
  width: '100%',
}));

const Home = styled('img')({
  height: `16px`,
  width: `16px`,
  margin: `0px`,
});

const Separator = styled('img')({
  height: `50px`,
  width: `20px`,
  margin: `0px 0px 0px 24px`,
});

const Team = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px 0px 0px 24px`,
}));

const Separator1 = styled('img')({
  height: `50px`,
  width: `20px`,
  margin: `0px 0px 0px 24px`,
});

const Projects = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px 0px 0px 24px`,
}));

const Separator2 = styled('img')({
  height: `50px`,
  width: `20px`,
  margin: `0px 0px 0px 24px`,
});

const Sept = styled('div')(({ theme }) => ({
  textAlign: `left`,
  whiteSpace: `pre-wrap`,
  color: theme.palette['Text']['Secondary'],
  fontStyle: theme.typography['Typography']['Body 1'].fontStyle,
  fontFamily: theme.typography['Typography']['Body 1'].fontFamily,
  fontWeight: theme.typography['Typography']['Body 1'].fontWeight,
  fontSize: theme.typography['Typography']['Body 1'].fontSize,
  letterSpacing: theme.typography['Typography']['Body 1'].letterSpacing,
  textDecoration: theme.typography['Typography']['Body 1'].textDecoration,
  lineHeight: theme.typography['Typography']['Body 1'].lineHeight,
  textTransform: theme.typography['Typography']['Body 1'].textTransform,
  margin: `0px 0px 0px 24px`,
}));

function Breadcrumb1(props) {
  return (
    <TypeQuest>
      <Home src={HomeImage} loading="lazy" alt={'Home'} />
      <Separator src={SeparatorImage} loading="lazy" alt={'Separator'} />
      <Team>{`Team`}</Team>
      <Separator1 src={Separator1Image} loading="lazy" alt={'Separator'} />
      <Projects>{`Projects`}</Projects>
      <Separator2 src={Separator2Image} loading="lazy" alt={'Separator'} />
      <Sept>{`Sept`}</Sept>
    </TypeQuest>
  );
}

export default Breadcrumb1;
